/*Source Code

Problem: UVALive 4329 		User: 030902414
Memory: 0 KB 		Time: 120 MS
Language: C++ 4.1.2 		Result: Accepted
VJ RunId: 214846 		Real RunId: 875188
Public: 	No Yes


树状数组求左边大于该数的个数、左边小于该数的个数、右边小于该数的个数、右边大于该数的个数。
*/
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
const int N=100010;
int n;
int C[N],lmax[N],lmin[N],rmax[N],rmin[N],data[N];
inline int lowbit(int x)
{
	return x&-x;
}

void Modify(int i,int x)
{
	while(i<=100000)
	{
		C[i]+=x;
		i+=lowbit(i);
	}
}
int Sum(int i)
{
	int res=0;
	while(i>0)
	{
		res+=C[i];
		i-=lowbit(i);
	}
	return res;
}
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i;
	long long ans;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d",&n);
		for(i=1;i<=n;++i)
			scanf("%d",data+i);
		memset(C,0,sizeof(C));
		for(i=1;i<=n;++i)
		{
			lmin[i]=Sum(data[i]);
			lmax[i]=i-1-lmin[i];
			Modify(data[i],1);
		}
		memset(C,0,sizeof(C));
		for(i=n;i>=1;--i)
		{
			rmin[i]=Sum(data[i]);
			rmax[i]=n-i-rmin[i];
			Modify(data[i],1);
		}
		ans=0;
		/*for(i=1;i<=n;++i)
		{
			printf("%d %d %d %d\n",lmin[i],lmax[i],rmin[i],rmax[i]);
		}*/
		for(i=2;i<n;++i)
		{
			ans+=rmin[i]*lmax[i]+rmax[i]*lmin[i];
		}
		printf("%lld\n",ans);
	}
	return 0;
}

