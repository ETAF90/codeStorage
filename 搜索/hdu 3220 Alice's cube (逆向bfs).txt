/*
 *	4677892 2011-09-29 16:58:50 Accepted 3220 31MS 508K 1291 B C++ kite 
 *	逆向的bfs，注意细节。
*/
#include<iostream>
#include<cstdio>
#include<cstring>
#include<queue>
using namespace std;
int dp[1<<16];
int c[32][2]={{0,1},{1,3},{3,11},{10,11},{10,8},{8,0},{4,5},{5,7},
			  {7,15},{15,14},{14,12},{12,4},{0,4},{1,5},{3,7},{11,15},
			  {10,14},{8,12},{1,9},{9,11},{2,10},{0,2},{8,9},{2,3},
			  {13,15},{5,13},{4,6},{6,14},{12,13},{6,7},{9,13},{2,6}};
const int start=65280;
void bfs()
{
	memset(dp,-1,sizeof(dp));
	queue<int> Q;
	int now,i,num,step,s1,s2,tmp;
	dp[start]=0;
	Q.push(start);
	for(step=1;!Q.empty() && step<=3;++step)
	{
		num=Q.size();
		while(num--){
			now=Q.front();
			Q.pop();
			for(i=0;i<32;++i){
				tmp=now;
				s1=tmp&(1 << c[i][0]);
				s2=tmp&(1 << c[i][1]);
				if( (s1 && !s2) || (!s1 && s2 ))
				{
					tmp^=(1 << c[i][0]);
					tmp^=(1 << c[i][1]);
					if(dp[tmp]==-1)
					{
						dp[tmp]=step;
						Q.push(tmp);
					}
				}
				
			}
		}
	}
}
int ans[1000],top;
int main()
{
	freopen("in.txt","r",stdin);
	int T,cases=1,i,x,sum;
	scanf("%d",&T);
	bfs();
	while(T--)
	{
		sum=0;
		for(i=0;i<16;++i)
		{
			scanf("%d",&x);
			if(x)sum+=(1<< i);
		}
		//printf("sum=%d\n",sum);
		if(dp[sum]==-1)
			printf("Case #%d: more\n",cases++);
		else
			printf("Case #%d: %d\n",cases++,dp[sum]);

	}
	return 0;
}