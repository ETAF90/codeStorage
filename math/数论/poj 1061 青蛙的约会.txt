#include <iostream>
#include <fstream>
#include <sstream>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <utility>
#include <queue>
#include <stack>
#include <list>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include<iostream>
using namespace std;
__int64 gcd(__int64 a,__int64 b)
{
	if(b==0)
		return a;
	return gcd(b,a%b);
}
__int64 extend_gcd(__int64 a,__int64 b,__int64& x,__int64& y)
{
	if(b==0)
	{
		x=1;y=0;
		return a;
	}
	__int64 r=extend_gcd(b,a%b,x,y);
	__int64 t=x;
	x=y;
	y=t-a/b*y;
	return r;
}
__int64 fun(__int64 a,__int64 b,__int64 c)
{
	__int64 r=gcd(a,b);
	if(c%r)
		return -1;
	a/=r;
	b/=r;
	c/=r;
	__int64 x1,y1;
	extend_gcd(a,b,x1,y1);
	__int64 t=-c*x1/b;
	x1=c*x1+b*t;
	if(x1<0)
		x1+=b;
	return x1;
}
int main()
{
	__int64 x,y,m,n,l,c,ans;
	while(scanf("%I64d%I64d%I64d%I64d%I64d",&x,&y,&m,&n,&l)!=EOF)
	{
		ans=fun(n-m,l,x-y);
		if(ans==-1)
			printf("Impossible\n");
		else
			printf("%I64d\n",ans);
	}
	return 0;
	
}