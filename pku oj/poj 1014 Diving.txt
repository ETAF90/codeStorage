	#include<iostream>
	using namespace std;
	#define N 6000000
	int f[N],m;
	void ZeroOne(int c)
	{
		for(int j=m;j>=c;j--)
			if(f[j]<f[j-c]+c)
				f[j]=f[j-c]+c;
	}
	void Complete(int c)
	{
		for(int j=c;j<=m;j++)
			if(f[j]<f[j-c]+c)
				f[j]=f[j-c]+c;
	}
	void MultiPack(int c,int number)
	{
		if(number==1)
		{
			ZeroOne(c);
			return;
		}
		if(number*c>=m)
		{
			Complete(c);
			return;
		}
		int k=1;
		while(k<number)
		{
			ZeroOne(c*k);
			number-=k;
			k<<=1;
		}
		ZeroOne(number*c);
	}
	int main()
	{
		int i,num[10],cases=1;
		while(1)
		{
			m=0;
			for(i=1;i<=6;i++)
			{
				scanf("%d",num+i);
				num[i]%=30;
				m+=i*num[i];
			}
			if(m==0)
				break;
			printf("Collection #%d:\n",cases++);
			if(m&1)
			{
				printf("Can't be divided.\n\n");
				continue;
			}
			m>>=1;
			for(i=0;i<=m;i++)
				f[i]=0;
			for(i=1;i<=6;i++)
				MultiPack(i,num[i]);
			if(f[m]==m)
				printf("Can be divided.\n\n");
			else
				printf("Can't be divided.\n\n");


		}
		return 0;
	}