/*
威佐夫博奕（Wythoff Game）：
　　有两堆各若干个物品，两个人轮流从某一堆或同时从两堆中取同样多的物品，规定每次至少取一个，多者不限，最后取光者得胜。
　　这种情况下是颇为复杂的。我们用（ak，bk）（ak ≤ bk ,k=0，1，2，...,n)表示两堆物品的数量并称其为局势，如果甲面对（0，0），那么甲已经输了，这种局势我们称为奇异局势。前几个奇异局势是：（0，0）、（1，2）、（3，5）、（4，7）、（6，10）、（8，13）、（9，15）、（11，18）、（12，20）。
　　可以看出,a0=b0=0,ak是未在前面出现过的最小自然数,而 bk= ak + k。 
奇异局势有如下三条性质：
　　1。任何自然数都包含在一个且仅有一个奇异局势中。
　　由于ak是未在前面出现过的最小自然数，所以有ak > ak-1 ，而 bk= ak + k > ak-1 + k-1 = bk-1 > ak-1 。所以性质1。成立。
　　2。任意操作都可将奇异局势变为非奇异局势。
　　事实上，若只改变奇异局势（ak，bk）的某一个分量，那么另一个分量不可能在其他奇异局势中，所以必然是非奇异局势。如果使（ak，bk）的两个分量同时减少，则由于其差不变，且不可能是其他奇异局势的差，因此也是非奇异局势。
　　3。采用适当的方法，可以将非奇异局势变为奇异局势。
　　假设面对的局势是（a,b），若 b = a，则同时从两堆中取走 a 个物体，就变为了奇异局势（0，0）；如果a = ak ，b > bk，那么，取走b - bk个物体，即变为奇异局势；如果 a = ak ， b < bk ,则同时从两堆中拿走 ak - ab - ak个物体,变为奇异局势（ ab - ak , ab - ak+ b - ak）；如果a > ak ，b= ak + k,则从第一堆中拿走多余的数量a - ak 即可；如果a < ak ，b= ak + k,分两种情况，第一种，a=aj （j < k）,从第二堆里面拿走 b - bj 即可；第二种，a=bj （j < k）,从第二堆里面拿走 b - aj 即可。 
结论：
　　两个人如果都采用正确操作，那么面对非奇异局势，先拿者必胜；反之，则后拿者取胜。
　　那么任给一个局势（a，b），怎样判断它是不是奇异局势呢？我们有如下公式：
　　ak =[k（1+√5）/2]，bk= ak + k （k=0，1，2，...,n 方括号表示取整函数)
　　奇妙的是其中出现了黄金分割数（1+√5）/2 = 1.618...,因此,由ak，bk组成的矩形近似为黄金矩形，由于2/（1+√5）=（√5-1）/2，可以先求出j=[a（√5-1）/2]，若a=[j（1+√5）/2]，那么a = aj，bj = aj + j，若不等于，那么a = aj+1，bj+1 = aj+1 + j + 1，若都不是，那么就不是奇异局势。然后再按照上述法则进行，一定会遇到奇异局势。
*/


#include<stdio.h>			//模板
#include<math.h>
int main()
{
	int a,b;
	double alpha=(1.0+sqrt(5.0))/2.0,beta=(3.0+sqrt(5.0))/2.0;
	int k,num1,num2;
	while(scanf("%d%d",&a,&b)!=EOF)
	{
		if(a<b)
		{a^=b;b^=a;a^=b;}		// 这里模板没有，需要添加
		k=ceil(a/beta);
		num1=alpha*k;
		num2=beta*k;
		if(num1==b && num2==a)
			printf("0\n");
		else
			printf("1\n");
	}
	return 0;
}
