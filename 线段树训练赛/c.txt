#include<iostream>
#include<cstdio>
#include<string>
#include<cmath>
#include<vector>
#include<deque>
#include<cstdlib>
using namespace std;
int ans;
bool flag[31];
struct node
{
	int l,r,v;
} a[300000];
void build(int i,int left,int right)
{
	a[i].l=left;
	a[i].r=right;
	a[i].v=1;
	if(left==right)
		return ;
	int mid=(left+right)>>1;
	build((i<<1),left,mid);
	build((i<<1)+1,mid+1,right);
}
void paint(int i,int left,int right,int color)
{
	if(a[i].l==left && a[i].r==right)
	{a[i].v=color;return;}
	if(a[i].v==color)
		return;
	if(a[i].v)
	{
		a[i*2+1].v=a[i*2].v=a[i].v;
		a[i].v=0;
	}
	int mid=(a[i].l+a[i].r)>>1;
	if(right<=mid)
		paint((i<<1),left,right,color);
	else
		if(left>mid)
			paint((i<<1)+1,left,right,color);
		else
		{
			paint(i<<1,left,mid,color);
			paint((i<<1)+1,mid+1,right,color);
		}
}
void query(int i,int left,int right)
{
	if(a[i].v)
	{
		ans+=a[i].v*(a[i].r-a[i].l+1);
		return ;
	}
	int mid=(a[i].l+a[i].r)>>1;	
	if(right<=mid)
		query((i<<1),left,right);
	else
		if(left>mid)
			query((i<<1)+1,left,right);
		else
		{
			query((i<<1),left,mid);
			query((i<<1)+1,mid+1,right);
		}
	
}
int main()
{
	int T,n,m,cases,p,q,x;
	scanf("%d",&T);
	for(cases=1;cases<=T;cases++)
	{
		scanf("%d%d",&n,&m);
		build(1,1,n);
		while(m--)
		{
			scanf("%d%d%d",&p,&q,&x);
			paint(1,p,q,x);
		}
		ans=0;
		query(1,1,n);
		printf("Case %d: The total value of the hook is %d.\n",cases,ans);
		
	}

	return 0;
}