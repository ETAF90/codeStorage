#include<iostream>
#include<algorithm>
using namespace std;
int a[22],n,b;
bool used[22],flag;
bool cmp(int x,int y)
{
	return x>y;
}
void dfs(int k,int len,int cnt)
{
	int i;
	if(cnt==1)
	{
		flag=true;
		return;
	}
	if(len==0)
	{
		for(i=0;i<n && used[i];i++);
		used[i]=true;
		dfs(i+1,b-a[i],cnt-1);
		if(flag)
			return;
		used[i]=false;
	}
	else
	{
		for(int pre=0,i=k;i<n;i++)
		{
			if(!used[i] && a[i]!=pre && a[i]<=len)		// pre ¼ôÖ¦
			{
				pre=a[i];
				used[i]=true;
				dfs(i+1,len-a[i],cnt);
				if(flag)
					return;
				used[i]=false;
				if(len==a[i])				//¼ôÖ¦
					return;
			}

		}
	}
}
int main()
{
	int i,sum,T,max;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d",&n);
		b=0;
		max=0;
		for(i=0;i<n;i++)
		{
			scanf("%d",a+i);
			b+=a[i];
			max=max>a[i]?max:a[i];
		}
		sort(a,a+n,cmp);
		flag=false;
		if(b%4)
		{
			printf("no\n");
			continue;
		}
		b/=4;
		if(max>b)
		{
			printf("no\n");
			continue;
		}
		memset(used,0,sizeof(used));
		dfs(0,b,4);
		if(flag)
			printf("yes\n");
		else
			printf("no\n");
	}
	return 0;
}