#include <iostream>
#include <fstream>
#include <sstream>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <utility>
#include <queue>
#include <stack>
#include <list>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
using namespace std;
struct Point
{
	double x,y;
	bool operator<(const Point& b)
	{return x<b.x;}
}a[1001];
int main()
{
	int n,i,cases=1,ans;
	double d,dx;
	double left[1001],right[1001],dl,dr;
	bool flag;
	while(scanf("%d%lf",&n,&d)!=EOF)
	{
		if(n==0 && d==0)
			break;
		if(n==0)
		{
			printf("Case %d: -1\n",cases++);
			continue;
		}
		flag=false;
		for(i=0;i<n;i++)
		{
			scanf("%lf%lf",&a[i].x,&a[i].y);
		} 
		sort(a,a+n);
		for(i=0;i<n;i++)
		{
			if(d<fabs(a[i].y))
			{
				printf("Case %d: -1\n",cases++);
				flag=true;
				break;
			}
			dx=sqrt(d*d-a[i].y*a[i].y);
			left[i]=a[i].x-dx;
			right[i]=a[i].x+dx;
		}
		if(flag)
			continue;
		ans=1;
		dl=left[0];
		dr=right[0];
		for(i=1;i<n;i++)
		{
			if(left[i]<=dr)
			{
				dl=dl>left[i]?dl:left[i];
				if(dr>right[i])
					dr=right[i];
			}
			else
			{
				ans++;
				dl=left[i];
				dr=right[i];
			}
		}
		printf("Case %d: %d\n",cases++,ans);

	}
	return 0;
}