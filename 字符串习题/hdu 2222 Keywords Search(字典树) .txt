/*
*	4298233 2011-07-31 14:20:09 Accepted 2222 640MS 28352K 1371 B C++ kite 
*/
#include<cstdio>
#include<cmath>
#include<cstring>
#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<functional>
#include<set>
#include<map>
const int N=1000002;
char str1[N],str2[N];
struct trnode
{
 int end;
 bool added;
 trnode* next[26];
 trnode()
 {
  for(int i=0;i<26;++i)next[i]=0;
  end=0;
  added=0;
 }
};
trnode *root;
void creat(char *s)
{
 int id;
 trnode*p=root;
 for(int i=0;s[i];++i)
 {
  id=s[i]-'a';
  if(p->next[id]==0)
  {
   trnode* q=new trnode;
   p->next[id]=q;
  }
  p=p->next[id];
  if(!s[i+1])
   p->end+=1;
 }
}
int search(char*s)
{
 int id,ans=0;
 trnode *p=root;
 for(int i=0;s[i];++i)
 {
  id=s[i]-'a';
  if(p->next[id]==0)
   return ans;
  if(p->next[id]->end && !p->next[id]->added)
  {
	  ans+=p->next[id]->end;
	  p->next[id]->added=1;
  }
  p=p->next[id];
 }
 return ans;
}
void Clear(trnode * p)
{
 for(int i=0;i<26;++i)
 {
  if(p->next[i])
   Clear(p->next[i]);
 }
 delete p;
}
int main()
{
 int T,n,i,ans;
 scanf("%d",&T);
 while(T--)
 {
  root=new trnode;
  scanf("%d",&n);
  for(i=0;i<n;++i)
  {
   scanf("%s",str2);
   creat(str2);
  }
  scanf("%s",str1);
  ans=0;
  for(i=0;str1[i];++i)
  {
   ans+=search(str1+i);
  }
  printf("%d\n",ans);
  Clear(root);
 }
 return 0;
}