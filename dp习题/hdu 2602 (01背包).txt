/*
 *	最简单的01背包问题。dp[i][j]：前i个物品，容量为j时得到的最大值。转移：dp[i][j]=max(dp[i-1][j-c[i]]+w[i],dp[i-1][j]);需保证j>=c[i].
 *	
 */

#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
const int N=1010;

int c[N],w[N],dp[N];

void solve(){
	
	int n,v,i,j;
	scanf("%d%d",&n,&v);
	for(i=0;i<n;++i)
		scanf("%d",w+i);
	for(i=0;i<n;++i)
		scanf("%d",c+i);
	memset(dp,0,sizeof(dp));
	for(i=0;i<n;++i){
		
		for(j=v;j>=c[i];--j){
			
			dp[j]=max(dp[j],dp[j-c[i]]+w[i]);
		}
	}
	printf("%d\n",dp[v]);
}
int main(){
	
	int T;
	scanf("%d",&T);
	while(T--){
		
		solve();
	}
	return 0;
}