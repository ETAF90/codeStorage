#include<iostream>
#include<algorithm>
using namespace std;						//先排序。这里有个引理：拍好序后 ：a[i],a[i+1],a[i+2],a[i+3]选两点使得耗费最小一定是a[i]和a[i+1],a[i+2]和a[i+3].
											//f[i][j]表示前i个里选j对的最小耗费。
											//状态转移：初始化：f[i][0]=0.
											//   i==2*j时：f[i][j]=f[i-2][j-1]+(a[i]-a[i-1])*(a[i]-a[i-1]);
											//   i>2*j时：f[i][j]=max(f[i][j]=f[i-2][j-1]+(a[i]-a[i-1])*(a[i]-a[i-1]),f[i-1][j]);
											//			即第i个是否被选中。
#define N 2002
int a[N],f[N][N];
int main()
{
	int n,k,i,j,tmp;
	while(scanf("%d%d",&n,&k)!=EOF)
	{
		for(i=1;i<=n;i++)
			scanf("%d",a+i);
		sort(a+1,a+n+1);
		for(i=0;i<=n;i++)
			f[i][0]=0;
		for(i=2;i<=n;i++)
			for(j=1;(j<<1)<=i && j<=k;j++)
			{
				tmp=f[i-2][j-1]+(a[i]-a[i-1])*(a[i]-a[i-1]);
				if((j<<1)==i)
					f[i][j]=tmp;
				else
				{
					if(tmp<f[i-1][j])
						f[i][j]=tmp;
					else
						f[i][j]=f[i-1][j];
				}
			}
		printf("%d\n",f[n][k]);
	}
	
	return 0;
}