#include <iostream>
#include <fstream>
#include <sstream>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <utility>
#include <queue>
#include <stack>
#include <list>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#define N 15000
int hash[N],cnt[N];
inline inline int ELFhash(char *key)
{
    unsigned long h = 0;
    unsigned long g;
    while( *key )
    {
        h =( h<< 4) + *key++;
        g = h & 0xf0000000L;
        if( g ) h ^= g >> 24;
        h &= ~g;
    }
    return h;
}

int main()
{
//	freopen("test.txt","r",stdin);
	int n,k,t;
	char s[33];
	char* str;
	while(scanf("%d",&n)!=EOF)
	{   
		memset(hash,-1,sizeof(hash));
		memset(cnt,0,sizeof(cnt));
		getchar();
		int max=1;
		while(n--)
		{
			gets(s);
			str=s;
			while(*str=='0')
				++str;
			k=ELFhash(str);
			t=k%N;
			while(hash[t]!=-1 && hash[t]!=k)
				t=(t+5)%N;
			if(hash[t]==-1)
			{
				cnt[t]=1;
				hash[t]=k;
			}
			else
				if(max<++cnt[t])
					max=cnt[t];
		}
		printf("%d\n",max);
	}
//	fclose(stdin);
	return 0;
}